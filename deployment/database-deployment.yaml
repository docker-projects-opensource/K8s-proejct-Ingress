# Deploy database first (it's the foundation)
#kubectl apply -f - <<EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
  namespace: finsecure-banking
  labels:
    app: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: POSTGRES_DB
          value: "messages"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-pvc


---
apiVersion: v1
kind: Service
metadata:
  name: database-service
  namespace: finsecure-banking
spec:
  selector:
    app: database
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP
# EOF

# # Wait for database to be ready
# kubectl wait --for=condition=available --timeout=300s deployment/database-deployment -n finsecure-banking

# # Check database pod status
# kubectl get pods -n finsecure-banking -l app=database